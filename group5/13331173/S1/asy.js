// Generated by LiveScript 1.3.1
(function(){
  var Button, addSumToBubble, addTheFetchNumberToSum, addClickToAllButtons, addLeaveEventsToTheArea, reset, resetCircle, resetForBubble;
  Button = (function(){
    Button.displayName = 'Button';
    var prototype = Button.prototype, constructor = Button;
    Button.buttons = [];
    Button.enableOtherButtons = function(current){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button !== current && button.state !== "done") {
          button.enable();
        }
      }
    };
    Button.disalbeOtherButtons = function(current){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button !== current && button.state !== "done") {
          button.disable();
        }
      }
    };
    Button.resetAllButtons = function(){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        button.reset();
      }
    };
    function Button(dom, numberFetchBack){
      var this$ = this;
      this.dom = dom;
      this.numberFetchBack = numberFetchBack;
      this.state = 'enable';
      this.dom.click(function(){
        if (this$.state === 'enable') {
          this$.constructor.disalbeOtherButtons(this$);
          this$.wait();
          this$.dom.find('.unread').removeClass('cancle-circle').addClass('red-circle');
          this$.dom.find('.unread').text('...');
          this$.fetchNumberAndShow();
        }
      });
      this.constructor.buttons.push(this);
    }
    prototype.wait = function(){
      this.state = "waiting";
      this.dom.removeClass('enable').addClass('waiting');
    };
    prototype.done = function(){
      this.state = "done";
      this.dom.removeClass('waiting').addClass('done');
    };
    prototype.enable = function(){
      this.state = "enable";
      this.dom.removeClass('disable').addClass('enable');
    };
    prototype.reset = function(){
      this.state = "enable";
      this.dom.removeClass('waiting done disable').addClass('enable');
      this.dom.find('.unread').text('');
    };
    prototype.disable = function(){
      this.state = "disable";
      this.dom.removeClass('enable').addClass('disable');
    };
    Button.allNumbersGet = function(){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button.state !== 'done') {
          return false;
        }
      }
      return true;
    };
    prototype.fetchNumberAndShow = function(){
      var this$ = this;
      $.get('/', function(number, result){
        this$.done();
        this$.dom.find('.unread').text(number);
        this$.numberFetchBack(number, number);
        if (this$.constructor.allNumbersGet()) {
          this$.constructor.bubbleCan();
        }
        this$.constructor.enableOtherButtons(this$);
      });
    };
    return Button;
  }());
  $(function(){
    addClickToAllButtons();
    addSumToBubble();
    addLeaveEventsToTheArea();
  });
  addSumToBubble = function(){
    var bubble;
    bubble = $('.info');
    bubble.addClass('disable');
    Button.bubbleCan = function(){
      bubble.removeClass('disable').addClass('enable');
    };
    bubble.click(function(){
      if (bubble.hasClass('enable')) {
        /*s = $ '.unread'
        #console.log s
        ss = 0
        for i from 0 to 4
        	ss += s[i].text
        #console.log ss
        #console.log bubble.find '.result' .text*/
        bubble.find('.result').text(addTheFetchNumberToSum.sum);
      }
    });
  };
  addTheFetchNumberToSum = {
    sum: 0,
    add: function(number){
      return this.sum += parseInt(number);
    },
    reset: function(){
      this.sum = 0;
    }
  };
  addClickToAllButtons = function(){
    var i$, ref$, len$;
    for (i$ = 0, len$ = (ref$ = $('#button .button')).length; i$ < len$; ++i$) {
      (fn$.call(this, i$, ref$[i$]));
    }
    function fn$(i, dom){
      var button;
      button = new Button($(dom), function(error, number){
        addTheFetchNumberToSum.add(number);
      });
    }
  };
  addLeaveEventsToTheArea = function(){
    $('#button').on('mouseleave', function(){
      reset();
    });
  };
  reset = function(){
    addTheFetchNumberToSum.reset();
    Button.resetAllButtons();
    resetForBubble();
    resetCircle();
  };
  resetCircle = function(){
    $('.unread').removeClass('red-circle');
  };
  resetForBubble = function(){
    var bubble;
    bubble = $('.info');
    bubble.find('.result').text('');
  };
}).call(this);
